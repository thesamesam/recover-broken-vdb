1.0.0 (2021-12-27)
----
- recover-broken-vdb-find-broken.sh: pass files as separate arguments to
  avoid failure on long list of files (thanks floppym;
  see https://bugs.gentoo.org/830004).
- recover-broken-vdb: chunk input to scanelf wrapper to avoid failure on
  long list of files (thanks floppym; see https://bugs.gentoo.org/830004).
- recover-broken-vdb: skip file if file(1) returns undecodable Unicode;
  it's unlikely to be a file meaningful to us (see commit message for details;
  fixes https://github.com/thesamesam/recover-broken-vdb/issues/6).

0.0.9 (2021-10-03)
----
- recover-broken-find-broken.sh: revert change that caused false-negatives
  from 0.0.6.
- recover-broken-vdb: reconcile logic with -find-broken.sh (related to
  the referenced false-negative change).
- recover-broken-vdb: further rewrite / clarification / fixes to the check
  for whether a package is broken. Now far more explicit about the path
  taken to decide if something is broken or not (and likely fixes some
  subtle bugs in the process).
- recover-broken-vdb: fix bug which caused fix_vdb() to bail out early
  if NEEDED existed but PROVIDES didn't (without considering if the package
  installed to any .so-like paths).
- recover-broken-vdb: don't abort if writing a blank entry; just log
  and move on (https://bugs.gentoo.org/815493).
- recover-broken-vdb: notify user if unlikely to need a world rebuild
  (if the only broken packages seemed to be executable-only, no libraries).
- recover-broken-vdb: add CONTENTS sanity check.
- recover-broken-vdb: code cleanups and refactoring, mostly as a result
  of the above changes.

0.0.8 (2021-10-01)
----
- recover-broken-vdb-find-broken.sh: prefix initial message with # so emerge
  invocation still works with the direct output of the tool
- recover-broken-vdb-find-broken.sh: undo redundant "non-critical" change

0.0.7 (2021-09-29)
----
- recover-broken-vdb: don't create tmpdir unless necessary
- recover-broken-vdb: make "Skipping" output more verbose
  (explain why we're skipping)

0.0.6 (2021-09-29)
----
- recover-broken-vdb: add --deep option to check paths not matching *bin*
  or *libdir* (and not looking '.so-like') to be more thorough. Files
  not matching such a condition are unlikely to be critical or needed
  to bring up the system, but it's good to provide the option. Extends runtime
  significantly.
- recover-broken-vdb: be more verbose at a few steps during the process,
  improve output format.
- recover-broken-vdb-find-broken.sh: mark non-critical packages (analogous to
  the above recover-broken-vdb--deep change)
- recover-broken-vdb-find-broken.sh: match recover-broken-vdb's skip condition
  if certain VDB metadata exists so we don't flag up false positives with the
  scan tool that recover-broken-vdb ignores/skips (with "Skipping").

0.0.5 (2021-09-29)
----
- setup.cfg: fix Python lower bound (https://bugs.gentoo.org/815373)

0.0.4 (2021-09-24)
----
- recover-broken-vdb-find-broken.sh: check for dynamically linked executables
  which are broken too (analogous to the recover-broken-vdb changes in 0.0.3)
- recover-broken-vdb: skip early if a package has NEEDED (e.g. purely dynamically
  linked)

0.0.3 (2021-09-23)
----
- recover-broken-vdb: don't skip dynamically linked executables
- recover-broken-vdb: don't skip packages with purely dynamically linked
  executables either

0.0.2 (2021-09-21)
----
- recover-broken-vdb: avoid false positives by using file(1) on candidate
  possible libraries
- recover-broken-vdb-find-broken.sh: fix output when no issues found
- recover-broken-vdb-find-broken.sh: better error handling, more documentation

0.0.1 (2021-09-20)
----

Initial release.
